create table STUD_MAIN_INFO_TABLE (
	INFO_STUD_ID INT,
	INFO_FIRST_NAME VARCHAR(50),
	INFO_LAST_NAME VARCHAR(50),
	EMAIL_ADDRESS VARCHAR(50),
	GENDER VARCHAR(50),
	PHONE_NUM VARCHAR(50),
	DEPARTMENT VARCHAR(50)
);


CREATE TABLE STUD_MARKS(
    STUD_ID INT,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    DATABASE1 INT, 
    PHYSICAL_CUL INT,
    PROG_LANG INT ,
    WEB INT,
    MARKS_AVG INT,
    GRADE VARCHAR(50));


CREATE TABLE STUD_DEL_LOG(
  
DONE_BY VARCHAR(255),
USER_NAME VARCHAR(255),
DESCRIPTION_1	VARCHAR(300)
);


-- AFTER INSERT TRIGGER PART
 
CREATE OR REPLACE FUNCTION ADD_TO_MARK_TAB_STUD()
	RETURNS trigger AS
$$
BEGIN

    INSERT INTO STUD_MARKS(STUD_ID,FIRST_NAME,LAST_NAME)
        VALUES(
			NEW.INFO_STUD_ID,
			NEW.INFO_FIRST_NAME,
			NEW.INFO_LAST_NAME );
 

	RETURN NEW;
END;
$$
LANGUAGE 'plpgsql';

CREATE  TRIGGER AFTER_ADDING_ADDRESS
    AFTER INSERT
    ON STUD_MAIN_INFO_TABLE
    FOR EACH ROW
    EXECUTE PROCEDURE ADD_TO_MARK_TAB_STUD();


-- BEFORE UPDATE WRITE GRADE AND MARKS_AVG

CREATE OR REPLACE FUNCTION BEFORE_UPDATE()
  RETURNS trigger AS
$$
BEGIN
  
NEW.MARKS_AVG =(NEW.DATABASE1 + NEW.PHYSICAL_CUL + NEW.PROG_LANG + NEW.WEB)/4;
IF NEW.MARKS_AVG >=90 AND NEW.MARKS_AVG<101 THEN
NEW.GRADE = 'EXCELLENT';
ELSEIF NEW.MARKS_AVG>=75 AND NEW.MARKS_AVG<90 THEN
NEW.GRADE = 'VERY GOOD';
ELSEIF NEW.MARKS_AVG>=60 AND NEW.MARKS_AVG<75 THEN
NEW.GRADE = 'GOOD';
ELSEIF NEW.MARKS_AVG>=40 AND NEW.MARKS_AVG<60 THEN
NEW.GRADE = 'AVERAGE';
ELSE
NEW.GRADE = 'NOT PROMOTED';
END IF;

RETURN NEW;
END;

$$
LANGUAGE 'plpgsql';

CREATE   TRIGGER UPDATE_ST_MARKS
  BEFORE UPDATE
  ON stud_marks
  FOR EACH ROW
  EXECUTE PROCEDURE BEFORE_UPDATE();











-- CREATE AFTER  DELETE TRIGGER WHICH WILL ADD INFO TO STUD_DEL_LOG



CREATE OR REPLACE FUNCTION aft_delete()
  RETURNS trigger AS
$$
BEGIN
INSERT into STUD_DEL_LOG VALUES (user,CONCAT(OLD.FIRST_NAME,' ',OLD.LAST_NAME), CONCAT(
          'DELETED BECAUSE HE(SHE) HAS A DEBT',' -> Deleted on ',NOW()));
RETURN NEW;
END;

$$
LANGUAGE 'plpgsql';

CREATE TRIGGER DELETE_STUD_FROM
  AFTER DELETE
  ON STUD_MARKS
  FOR EACH ROW
  EXECUTE PROCEDURE aft_delete();

-- CHECK INSERT TRIGGER
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (1, 'Hamnet', 'Wyley', 'hwyley0@virginia.edu', 'Female', '(928) 7306246', 'Training');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (2, 'Galen', 'Wastie', 'gwastie1@zdnet.com', 'Male', '(932) 3521240', 'Services');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (3, 'Giuditta', 'Hargess', 'ghargess2@geocities.com', 'Male', '(979) 3685120', 'Sales');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (4, 'Loreen', 'Capponeer', 'lcapponeer3@digg.com', 'Male', '(558) 4500642', 'Product Management');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (5, 'Delbert', 'Covelle', 'dcovelle4@github.com', 'Bigender', '(557) 8822213', 'Legal');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (6, 'Cami', 'Voice', 'cvoice5@boston.com', 'Male', '(779) 5178980', 'Engineering');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (7, 'Darelle', 'Jolin', 'djolin6@facebook.com', 'Male', '(549) 1231770', 'Business Development');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (8, 'Emilia', 'Knowler', 'eknowler7@nytimes.com', 'Female', '(841) 9425268', 'Product Management');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (9, 'Lynn', 'McCard', 'lmccard8@nifty.com', 'Male', '(622) 9635753', 'Human Resources');
insert into STUD_MAIN_INFO_TABLE (INFO_STUD_ID, INFO_FIRST_NAME, INFO_LAST_NAME, EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT) values (10, 'Jerrold', 'McMillan', 'jmcmillan9@instagram.com', 'Male', '(982) 2043798', 'Training');


-- UPDATE STUD_MARKS CHECK THE TRIGGER

UPDATE STUD_MARKS SET DATABASE1 = 40, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 1;
UPDATE STUD_MARKS SET DATABASE1 = 100, PHYSICAL_CUL =100, PROG_LANG = 90, WEB = 95
WHERE STUD_ID = 2;
UPDATE STUD_MARKS SET DATABASE1 = 50, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 3;
UPDATE STUD_MARKS SET DATABASE1 = 60, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 4;
UPDATE STUD_MARKS SET DATABASE1 = 70, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 5;
UPDATE STUD_MARKS SET DATABASE1 = 80, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 6;
UPDATE STUD_MARKS SET DATABASE1 = 90, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 7;
UPDATE STUD_MARKS SET DATABASE1 = 60, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 8;
UPDATE STUD_MARKS SET DATABASE1 = 70, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 9;
UPDATE STUD_MARKS SET DATABASE1 = 87, PHYSICAL_CUL =100, PROG_LANG = 100, WEB = 100
WHERE STUD_ID = 10;
-- DELETE CHECK
DELETE FROM STUD_MARKS WHERE STUD_ID = 10;
DELETE FROM STUD_MARKS WHERE STUD_ID = 9;
DELETE FROM STUD_MARKS WHERE STUD_ID = 8;
DELETE FROM STUD_MARKS WHERE STUD_ID = 7;
DELETE FROM STUD_MARKS WHERE STUD_ID = 6;
DELETE FROM STUD_MARKS WHERE STUD_ID = 5;
DELETE FROM STUD_MARKS WHERE STUD_ID = 4;
DELETE FROM STUD_MARKS WHERE STUD_ID = 3;
DELETE FROM STUD_MARKS WHERE STUD_ID = 2;
DELETE FROM STUD_MARKS WHERE STUD_ID = 1;

-- CREATE VIEW TO SEE FULL INFO OF STUDENT


CREATE VIEW JOIN_VIEW_1
AS 
SELECT INFO_STUD_ID,INFO_FIRST_NAME,INFO_LAST_NAME,EMAIL_ADDRESS, GENDER, PHONE_NUM, DEPARTMENT, DATABASE1,PHYSICAL_CUL,PROG_LANG,WEB, MARKS_AVG  
FROM STUD_MAIN_INFO_TABLE 
LEFT JOIN   STUD_MARKS 
ON STUD_MAIN_INFO_TABLE.INFO_STUD_ID = STUD_MARKS.STUD_ID   ;




SELECT * FROM STUD_DEL_LOG;

SELECT * FROM JOIN_VIEW_1;

SELECT * FROM STUD_MARKS;

SELECT * FROM STUD_MAIN_INFO_TABLE;


